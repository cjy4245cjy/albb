'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _EventDispatcher = require('./EventDispatcher');

var _EventDispatcher2 = _interopRequireDefault(_EventDispatcher);

var _Mapped = require('./Mapped');

var _Mapped2 = _interopRequireDefault(_Mapped);

var _util = require('./util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

function noop() {}

function toArrayChildren(children) {
  var ret = [];
  _react2["default"].Children.forEach(children, function (c) {
    ret.push(c);
  });
  return ret;
}

var ScrollOverPack = function (_React$Component) {
  _inherits(ScrollOverPack, _React$Component);

  function ScrollOverPack() {
    _classCallCheck(this, ScrollOverPack);

    var _this = _possibleConstructorReturn(this, _React$Component.apply(this, arguments));

    _this.children = toArrayChildren(_this.props.children);
    _this.oneEnter = false;
    _this.state = {
      show: false,
      children: toArrayChildren(_this.props.children)
    };
    ['scrollEventListener'].forEach(function (method) {
      return _this[method] = _this[method].bind(_this);
    });
    return _this;
  }

  ScrollOverPack.prototype.componentDidMount = function componentDidMount() {
    this.dom = _reactDom2["default"].findDOMNode(this);
    // this.computedStyle = document.defaultView.getComputedStyle(this.dom);
    if (this.props.scrollName) {
      _Mapped2["default"].register(this.props.scrollName, this.dom);
    }
    var date = Date.now();
    var length = _EventDispatcher2["default"]._listeners.scroll ? _EventDispatcher2["default"]._listeners.scroll.length : 0;
    this.eventType = 'scroll.scrollEvent' + date + length;
    this.scrollEventListener();
    _EventDispatcher2["default"].addEventListener(this.eventType, this.scrollEventListener);
  };

  ScrollOverPack.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    this.setState({
      children: toArrayChildren(nextProps.children)
    });
  };

  ScrollOverPack.prototype.componentWillUnmount = function componentWillUnmount() {
    _Mapped2["default"].unRegister(this.props.scrollName);
    _EventDispatcher2["default"].removeEventListener(this.eventType, this.scrollEventListener);
  };

  ScrollOverPack.prototype.scrollEventListener = function scrollEventListener(e) {
    var clientHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
    var scrollTop = (0, _util.currentScrollTop)();
    // 屏幕缩放时的响应，所以放回这里，这个是pack，只处理子级里面的动画，所以marginTop无关系，所以不需减掉；
    var domRect = this.dom.getBoundingClientRect();
    var offsetTop = domRect.top + scrollTop;
    var elementShowHeight = scrollTop - offsetTop + clientHeight;
    var playScale = (0, _util.transformArguments)(this.props.playScale);
    var playHeight = clientHeight * playScale[0];

    var enter = elementShowHeight >= playHeight && elementShowHeight <= clientHeight + playHeight;
    var bottomLeave = elementShowHeight < playHeight;
    // 设置往上时的出场点...
    var leaveHeight = domRect.height > clientHeight ? clientHeight : domRect.height;
    var topLeave = this.props.replay ? elementShowHeight > clientHeight + leaveHeight * playScale[1] : null;
    var mode = 'scroll';
    if (enter) {
      if (!this.state.show) {
        this.setState({
          show: true
        });
        mode = 'enter';
        this.props.onChange({ mode: mode, scrollName: this.props.scrollName });
      }
      if (!this.props.always) {
        _EventDispatcher2["default"].removeEventListener(this.eventType, this.scrollEventListener);
      }
    }
    if (topLeave || bottomLeave) {
      if (this.state.show) {
        this.setState({
          show: false
        });
        mode = 'leave';
        this.props.onChange({ mode: mode, scrollName: this.props.scrollName });
      }
    }

    if (e) {
      this.props.scrollEvent({ mode: mode, scrollName: this.props.scrollName, e: e });
    }
  };

  ScrollOverPack.prototype.render = function render() {
    var _this2 = this;

    var placeholderProps = _objectWithoutProperties(this.props, []);

    ['scrollName', 'playScale', 'replay', 'component', 'playScale', 'always', 'scrollEvent', 'hideProps'].forEach(function (key) {
      return delete placeholderProps[key];
    });
    var childToRender = void 0;
    if (!this.oneEnter && !this.state.show) {
      childToRender = (0, _react.createElement)(this.props.component, _extends({}, placeholderProps), null);
      this.oneEnter = true;
    } else {
      if (!this.state.show) {
        this.children = this.children.map(function (item) {
          if (!item || !item.key) {
            return null;
          }
          var element = void 0;
          var hideProps = _this2.props.hideProps[item.key];
          if (hideProps) {
            element = _react2["default"].cloneElement(item, _extends({}, hideProps));
            return element;
          }
          element = _react2["default"].cloneElement(item, {}, null);
          return element;
        });
      } else {
        this.children = this.state.children;
      }
      childToRender = (0, _react.createElement)(this.props.component, _extends({}, placeholderProps), this.children);
    }
    return childToRender;
  };

  return ScrollOverPack;
}(_react2["default"].Component);

var objectOrArray = _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.object, _react2["default"].PropTypes.array]);
var numberOrArray = _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.number, _react2["default"].PropTypes.array]);
ScrollOverPack.propTypes = {
  component: _react2["default"].PropTypes.string,
  playScale: numberOrArray,
  always: _react2["default"].PropTypes.bool,
  scrollEvent: _react2["default"].PropTypes.func,
  children: objectOrArray,
  className: _react2["default"].PropTypes.string,
  style: objectOrArray,
  scrollName: _react2["default"].PropTypes.string,
  replay: _react2["default"].PropTypes.bool,
  onChange: _react2["default"].PropTypes.func,
  hideProps: _react2["default"].PropTypes.object
};

ScrollOverPack.defaultProps = {
  component: 'div',
  playScale: 0.5,
  always: true,
  scrollEvent: noop,
  replay: false,
  onChange: noop,
  hideProps: {}
};

exports["default"] = ScrollOverPack;
module.exports = exports['default'];