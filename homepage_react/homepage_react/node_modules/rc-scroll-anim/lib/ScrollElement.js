'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _Mapped = require('./Mapped');

var _Mapped2 = _interopRequireDefault(_Mapped);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var ScrollElement = function (_React$Component) {
  _inherits(ScrollElement, _React$Component);

  function ScrollElement() {
    _classCallCheck(this, ScrollElement);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  ScrollElement.prototype.componentDidMount = function componentDidMount() {
    var domNode = _reactDom2["default"].findDOMNode(this);
    if (this.props.scrollName) {
      _Mapped2["default"].register(this.props.scrollName, domNode);
    }
  };

  ScrollElement.prototype.componentWillUnmount = function componentWillUnmount() {
    _Mapped2["default"].unRegister(this.props.scrollName);
  };

  ScrollElement.prototype.render = function render() {
    var props = _objectWithoutProperties(this.props, []);

    ['scrollName', 'component'].forEach(function (key) {
      return delete props[key];
    });
    return _react2["default"].createElement(this.props.component, _extends({}, props));
  };

  return ScrollElement;
}(_react2["default"].Component);

var funcOrString = _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.func, _react2["default"].PropTypes.string]);
ScrollElement.propTypes = {
  component: funcOrString,
  scrollName: _react2["default"].PropTypes.string
};

ScrollElement.defaultProps = {
  component: 'div'
};
exports["default"] = ScrollElement;
module.exports = exports['default'];