'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _tweenFunctions = require('tween-functions');

var _tweenFunctions2 = _interopRequireDefault(_tweenFunctions);

var _raf = require('raf');

var _raf2 = _interopRequireDefault(_raf);

var _EventDispatcher = require('./EventDispatcher');

var _EventDispatcher2 = _interopRequireDefault(_EventDispatcher);

var _util = require('./util');

var _Mapped = require('./Mapped');

var _Mapped2 = _interopRequireDefault(_Mapped);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by jljsj on 16/1/13.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


function noop() {}

var ScrollLink = function (_React$Component) {
  _inherits(ScrollLink, _React$Component);

  function ScrollLink() {
    _classCallCheck(this, ScrollLink);

    var _this = _possibleConstructorReturn(this, _React$Component.apply(this, arguments));

    _this.rafID = -1;
    _this.state = {
      active: false
    };
    ['scrollEventListener', 'onClick', 'raf'].forEach(function (method) {
      return _this[method] = _this[method].bind(_this);
    });
    return _this;
  }

  ScrollLink.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    this.dom = _reactDom2["default"].findDOMNode(this);
    var date = Date.now();
    var length = _EventDispatcher2["default"]._listeners.scroll ? _EventDispatcher2["default"]._listeners.scroll.length : 0;
    this.eventType = 'scroll.scrollAnchorEvent' + date + length;
    _EventDispatcher2["default"].addEventListener(this.eventType, this.scrollEventListener);
    // 第一次进入；
    setTimeout(function () {
      _this2.scrollEventListener();
    });
  };

  ScrollLink.prototype.componentWillUnmount = function componentWillUnmount() {
    _EventDispatcher2["default"].removeEventListener(this.eventType, this.scrollEventListener);
    this.cancelRequestAnimationFrame();
  };

  ScrollLink.prototype.onClick = function onClick(e) {
    e.preventDefault();
    var docRect = document.documentElement.getBoundingClientRect();
    var elementDom = _Mapped2["default"].get(this.props.location);
    var elementRect = elementDom.getBoundingClientRect();
    this.scrollTop = (0, _util.currentScrollTop)();
    var toTop = Math.round(elementRect.top) - Math.round(docRect.top);
    this.toTop = this.props.toShowHeight ? toTop - (0, _util.transformArguments)(this.props.showHeightActive)[0] : toTop;
    this.initTime = Date.now();
    this.rafID = (0, _raf2["default"])(this.raf);
  };

  ScrollLink.prototype.raf = function raf() {
    if (this.rafID === -1) {
      return;
    }
    var duration = this.props.duration;
    var now = Date.now();
    var progressTime = now - this.initTime > duration ? duration : now - this.initTime;
    var easeValue = _tweenFunctions2["default"][this.props.ease](progressTime, this.scrollTop, this.toTop, duration);
    window.scrollTo(window.scrollX, easeValue);
    if (progressTime === duration) {
      this.cancelRequestAnimationFrame();
    } else {
      this.rafID = (0, _raf2["default"])(this.raf);
    }
  };

  ScrollLink.prototype.cancelRequestAnimationFrame = function cancelRequestAnimationFrame() {
    _raf2["default"].cancel(this.rafID);
    this.rafID = -1;
  };

  ScrollLink.prototype.scrollEventListener = function scrollEventListener() {
    var docRect = document.documentElement.getBoundingClientRect();
    var clientHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
    var elementDom = _Mapped2["default"].get(this.props.location);
    if (!elementDom) {
      throw new Error('There is no location(' + this.props.location + ') in the element.');
    }
    var elementRect = elementDom.getBoundingClientRect();
    var elementClientHeight = elementDom.clientHeight;
    var scrollTop = (0, _util.currentScrollTop)();
    var top = Math.round(docRect.top - elementRect.top + scrollTop);
    var showHeightActive = (0, _util.transformArguments)(this.props.showHeightActive);
    var startShowHeight = showHeightActive[0].toString().indexOf('%') >= 0 ? parseFloat(showHeightActive[0]) / 100 * clientHeight : parseFloat(showHeightActive[0]);
    var endShowHeight = showHeightActive[1].toString().indexOf('%') >= 0 ? parseFloat(showHeightActive[1]) / 100 * clientHeight : parseFloat(showHeightActive[1]);
    if (top >= -startShowHeight && top < elementClientHeight - endShowHeight) {
      if (!this.props.onFocus.only) {
        var obj = {
          target: this.dom,
          location: this.props.location
        };
        this.props.onFocus.call(this, obj);
        this.props.onFocus.only = true;
      }
      if (!this.state.active) {
        this.setState({
          active: true
        });
      }
    } else {
      if (this.props.onFocus.only) {
        var _obj = {
          target: this.dom,
          location: this.props.location
        };
        this.props.onBlur.call(this, _obj);
      }
      this.props.onFocus.only = false;
      if (this.state.active) {
        this.setState({
          active: false
        });
      }
    }
  };

  ScrollLink.prototype.render = function render() {
    var _this3 = this;

    var active = this.state.active ? this.props.active : '';
    var _onClick = this.props.onClick;
    var props = _extends({}, this.props, {
      onClick: function onClick(e) {
        _onClick(e);
        _this3.onClick(e);
      }
    });
    ['component', 'duration', 'active', 'location', 'showHeightActive', 'ease', 'toShowHeight'].forEach(function (key) {
      return delete props[key];
    });
    var reg = new RegExp(active, 'ig');
    var className = props.className || '';
    props.className = className.indexOf(active) === -1 ? (className + ' ' + active).trim() : className.replace(reg, '').trim();
    return (0, _react.createElement)(this.props.component, props);
  };

  return ScrollLink;
}(_react2["default"].Component);

var stringOrNumber = _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.string, _react2["default"].PropTypes.number]);
var stringOrNumberOrArray = _react2["default"].PropTypes.oneOfType([stringOrNumber, _react2["default"].PropTypes.array]);
var objectOrArray = _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.object, _react2["default"].PropTypes.array]);
var childPropTypes = _react2["default"].PropTypes.oneOfType([objectOrArray, _react2["default"].PropTypes.string]);
ScrollLink.propTypes = {
  component: _react2["default"].PropTypes.string,
  children: childPropTypes,
  className: _react2["default"].PropTypes.string,
  style: objectOrArray,
  duration: _react2["default"].PropTypes.number,
  active: _react2["default"].PropTypes.string,
  location: _react2["default"].PropTypes.string,
  showHeightActive: stringOrNumberOrArray,
  toShowHeight: _react2["default"].PropTypes.bool,
  ease: _react2["default"].PropTypes.string,
  onClick: _react2["default"].PropTypes.func,
  onFocus: _react2["default"].PropTypes.func,
  onBlur: _react2["default"].PropTypes.func
};

ScrollLink.defaultProps = {
  component: 'div',
  duration: 450,
  active: 'active',
  showHeightActive: '50%',
  ease: 'easeInOutQuad',
  onClick: noop,
  onFocus: noop,
  onBlur: noop
};

exports["default"] = ScrollLink;
module.exports = exports['default'];