'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _util = require('./util');

var _styleUtils = require('style-utils');

var _TimeLine = require('./TimeLine');

var _TimeLine2 = _interopRequireDefault(_TimeLine);

var _plugins = require('./plugins');

var _plugins2 = _interopRequireDefault(_plugins);

var _ticker = require('./ticker');

var _ticker2 = _interopRequireDefault(_ticker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

function noop() {}

var perFrame = Math.round(1000 / 60);

var tickerIdNum = 0;

var TweenOne = function (_Component) {
  _inherits(TweenOne, _Component);

  function TweenOne() {
    _classCallCheck(this, TweenOne);

    var _this = _possibleConstructorReturn(this, _Component.apply(this, arguments));

    _this.rafID = -1;
    _this.moment = _this.props.moment || 0;
    _this.state = {
      startMoment: _this.props.moment,
      startFrame: _ticker2["default"].frame,
      paused: _this.props.paused
    };
    ['raf', 'frame', 'start', 'play', 'restart'].forEach(function (method) {
      return _this[method] = _this[method].bind(_this);
    });
    return _this;
  }

  TweenOne.prototype.componentDidMount = function componentDidMount() {
    this.dom = _reactDom2["default"].findDOMNode(this);
    this.start(this.props);
  };

  TweenOne.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    var _this2 = this;

    // 跳帧事件 moment;
    var newMoment = nextProps.moment;
    if (typeof newMoment === 'number' && newMoment !== this.moment) {
      this.setState({
        startMoment: newMoment,
        startFrame: _ticker2["default"].frame
      }, function () {
        if (_this2.rafID === -1 && !nextProps.paused) {
          (function () {
            _this2.timeLine.resetAnimData();
            var style = nextProps.style;
            _this2.dom.setAttribute('style', '');
            Object.keys(style).forEach(function (key) {
              _this2.dom.style[key] = (0, _styleUtils.stylesToCss)(key, style[key]);
            });
            _this2.play();
          })();
        } else {
          _this2.raf();
        }
      });
    }
    // 动画处理
    var newAnimation = nextProps.animation;
    var currentAnimation = this.props.animation;
    var equal = (0, _util.objectEqual)(currentAnimation, newAnimation);
    var styleEqual = (0, _util.objectEqual)(this.props.style, nextProps.style);
    // 如果 animation 不同， 从0开始播放
    if (!equal) {
      this.cancelRequestAnimationFrame();
      if ((!styleEqual || nextProps.resetStyleBool) && this.timeLine) {
        this.timeLine.resetDefaultStyle();
      }
      this.setState({
        startMoment: 0,
        startFrame: _ticker2["default"].frame
      }, function () {
        _this2.start(nextProps);
      });
    } else if (!styleEqual) {
      // 如果 animation 相同，，style 不同，从当前时间开放。
      if (this.rafID !== -1) {
        this.cancelRequestAnimationFrame();
        if (this.timeLine) {
          this.timeLine.resetDefaultStyle();
        }
        this.setState({
          startMoment: this.timeLine.progressTime,
          startFrame: _ticker2["default"].frame
        }, function () {
          _this2.start(nextProps);
        });
      }
    }
    // 暂停倒放
    if (this.props.paused !== nextProps.paused || this.props.reverse !== nextProps.reverse) {
      if (nextProps.paused) {
        this.cancelRequestAnimationFrame();
      } else {
        if (nextProps.reverse && nextProps.reverseDelay) {
          this.cancelRequestAnimationFrame();
          _ticker2["default"].timeout(this.restart, nextProps.reverseDelay);
        } else {
          this.restart();
        }
      }
    }
  };

  TweenOne.prototype.componentWillUnmount = function componentWillUnmount() {
    this.cancelRequestAnimationFrame();
  };

  TweenOne.prototype.restart = function restart() {
    var _this3 = this;

    this.setState({
      startMoment: this.timeLine.progressTime,
      startFrame: _ticker2["default"].frame
    }, function () {
      _this3.play();
    });
  };

  TweenOne.prototype.start = function start(props) {
    if (props.animation && Object.keys(props.animation).length) {
      this.timeLine = new _TimeLine2["default"](this.dom, (0, _util.dataToArray)(props.animation), this.props.attr);
      // 开始动画
      this.play();
    }
  };

  TweenOne.prototype.play = function play() {
    this.cancelRequestAnimationFrame();
    this.rafID = 'tween' + Date.now() + '-' + tickerIdNum;
    _ticker2["default"].wake(this.rafID, this.raf);
    // 预先注册 raf, 初始动画数值。
    this.raf();
    tickerIdNum++;
  };

  TweenOne.prototype.frame = function frame() {
    var moment = (_ticker2["default"].frame - this.state.startFrame) * perFrame + (this.state.startMoment || 0);
    if (this.props.reverse) {
      moment = (this.state.startMoment || 0) - (_ticker2["default"].frame - this.state.startFrame) * perFrame;
    }
    moment = moment > this.timeLine.totalTime ? this.timeLine.totalTime : moment;
    moment = moment <= 0 ? 0 : moment;
    if (moment < this.moment && !this.props.reverse) {
      this.timeLine.resetDefaultStyle();
    }
    this.moment = moment;
    this.timeLine.onChange = this.props.onChange;
    this.timeLine.frame(moment);
    // 注册完设 true
    this.timeLine.register = true;
  };

  TweenOne.prototype.raf = function raf() {
    this.frame();
    if (this.moment >= this.timeLine.totalTime && !this.props.reverse || this.props.paused || this.props.reverse && this.moment === 0) {
      return this.cancelRequestAnimationFrame();
    }
  };

  TweenOne.prototype.cancelRequestAnimationFrame = function cancelRequestAnimationFrame() {
    _ticker2["default"].clear(this.rafID);
    this.rafID = -1;
  };

  TweenOne.prototype.render = function render() {
    var props = (0, _objectAssign2["default"])({}, this.props);
    ['animation', 'component', 'reverseDelay', 'attr', 'paused', 'reverse', 'moment', 'resetStyleBool'].forEach(function (key) {
      return delete props[key];
    });
    props.style = (0, _objectAssign2["default"])({}, this.props.style);
    for (var p in props.style) {
      if (p.indexOf('filter') >= 0 || p.indexOf('Filter') >= 0) {
        // ['Webkit', 'Moz', 'Ms', 'ms'].forEach(prefix=> style[`${prefix}Filter`] = style[p]);
        var transformArr = ['Webkit', 'Moz', 'Ms', 'ms'];
        for (var i = 0; i < transformArr.length; i++) {
          props.style[transformArr[i] + 'Filter'] = props.style[p];
        }
      }
    }
    props.component = typeof props.component === 'function' ? this.props.componentReplace : props.component;
    if (!props.component) {
      delete props.component;
    }
    return _react2["default"].createElement(this.props.component, props);
  };

  return TweenOne;
}(_react.Component);

var objectOrArray = _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.array]);

TweenOne.propTypes = {
  component: _react.PropTypes.any,
  componentReplace: _react.PropTypes.string,
  animation: objectOrArray,
  children: _react.PropTypes.any,
  style: _react.PropTypes.object,
  paused: _react.PropTypes.bool,
  reverse: _react.PropTypes.bool,
  reverseDelay: _react.PropTypes.number,
  moment: _react.PropTypes.number,
  attr: _react.PropTypes.string,
  onChange: _react.PropTypes.func,
  resetStyleBool: _react.PropTypes.bool
};

TweenOne.defaultProps = {
  component: 'div',
  reverseDelay: 0,
  attr: 'style',
  onChange: noop
};
TweenOne.plugins = _plugins2["default"];
exports["default"] = TweenOne;
module.exports = exports['default'];